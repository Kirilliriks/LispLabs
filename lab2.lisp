#|
lab2:
- Author: KirilliriK
- Date: 2023-09-19
|#

(defun rev (l)          #| Объявляем функцию rev принимающую в качестве параметра список l, функция будет переворачивать списки|#
    (cond               #| Используем оператор cond для проверки двух вариантов, когда список l пуст или нет |#
        ((null l) '())  #| Если l пуст то возвращаем пустое |#
        (T              #| В ином случае выполняем дальнейшие инструкции |#
            (append     #| Используем оператор append для объединения списков |#
                (rev (cdr l)) #| Рекурсивный вызов функции rev в качестве входящего параметра используем список БЕЗ головы, который получаем с помощью CDR |#
                (list         #| Формируем список с помощью оператора list |#
                    (if (atom (car l)) #| Если голова списка l является атомом |#
                            (car l)    #| То возвращаем голову |#
                            (rev (car l)) #| Иначе рекурсивно переворачиваем список |#
                    )
                )
            )
        )
    )
)

(defun algh (l)                     #| Объявляем функцию algh принимающую в качестве параметра список l|#
                                    #| Функция будет перебирать список для нахождения элементов которые надо перевернуть|#
    (cond                           #| Используем оператор cond для проверки двух вариантов, когда список l пуст или нет |#
        ((null l) '())              #| Если l пуст то возвращаем пустое |#
        (T                          #| В ином случае выполняем дальнейшие инструкции |#
            (append                 #| Используем оператор append для объединения списков |#
                (list                           #| Формируем список с помощью оператора list |#
                    (if (atom (car l))          #| Если голова списка l является атомом |#
                        (car l)                 #| То возвращаем голову |#
                        (rev (car l))           #| Иначе рекурсивно переворачиваем список |#
                    )
                )
                (algh (cdr l))          #| Вызываем рекурсивно algh для продолжения перебора элементов |#
            )
        )
    )
)

(terpri)
(write-string "Input ")
(write '(1 ((2 3) 4) 5 6))
(terpri)
(write-string "Result ")
(write (algh '(1 ((2 3) 4) 5 6)))
(terpri)